import os

from aiogram import types, Router
from aiogram.filters.state import StateFilter
from aiogram.filters import CommandStart

from service.service import service
from filters.zip import IsZipFilter

router = Router()


@router.message(CommandStart(), StateFilter("*"))
async def bot_start(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!")


@router.message(IsZipFilter())
async def handle_accounts(message: types.Message):
    document = message.document
    if not document.file_name.lower().endswith(".zip"):
        await message.answer("‚ùóÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ ZIP-–∞—Ä—Ö–∏–≤ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏.")
        return

    await message.answer("üîÑ –ü—Ä–∏–Ω—è—Ç ZIP-–∞—Ä—Ö–∏–≤. –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç‚Ä¶")

    temp_zip = f"accounts_{message.from_user.id}.zip"

    file = await message.bot.get_file(document.file_id)
    await message.bot.download_file(file.file_path, destination=temp_zip)

    try:
        stats = await service.check_accounts(temp_zip)
        await message.answer(
            f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n"
            f"üë• –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: <b>{stats['total']}</b>\n"
            f"üü¢ –ë–µ–∑ —Å–ø–∞–º–±–ª–æ–∫–∞: <b>{stats['ok']}</b>\n"
            f"üî¥ –°–æ —Å–ø–∞–º–±–ª–æ–∫–æ–º: <b>{stats['banned']}</b>\n"
            f"‚ö†Ô∏è –û—à–∏–±–æ–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: <b>{stats['errors']}</b>",
            parse_mode="HTML"
        )
    except ValueError as ve:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {ve}")
    except Exception as e:
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—Ä—Ö–∏–≤–∞.")
    finally:
        if os.path.exists(temp_zip):
            os.remove(temp_zip)
